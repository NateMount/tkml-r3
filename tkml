#! /usr/bin/env python3.10

import os, sys

def headless(funct):
	return funct()

def _help() -> None:
	"""Displays help text to stdout"""
	print("\033[48;2;202;254;1m\033[38;2;0;0;0m                     TKML [help]                   \033[0m\n\n\033[48;2;202;254;1m\033[38;2;0;0;0m Usage \033[0m\033[38;2;202;254;1m tkml path command")


def _load_yaml(path:str) -> dict:
	"""Loads a yaml file into python dict"""
	import yaml
	try:
		with open(path, 'r') as f:
			return yaml.safe_load(f)
	except FileNotFoundError:
		print("\033[38;2;202;254;1mFile path not recognized")
		sys.exit()

def _load_xml(path:str):
	"""Loads a xml file into a python object"""
	raise NotImplementedError

@headless
def _read():
	return _load_yaml if 'form=yaml' in sys.argv else _load_xml:


def _render(path:str) -> str:
	"""Reads in path to tkml file to render into python code"""
	data = _read(path)

def main() -> None:
	"""Main"""
	if len(sys.argv) == 1 or '--help' in sys.argv:
		_help()
		sys.exit()

	if 'render' in sys.argv:
		_render(sys.argv[1])
	
	elif 'compile' in sys.argv:
		_path = _render(sys.argv[1])

		if sys.platform in ('win32', 'cygwin', 'msys'):
			if 'pyinstaller' in os.listdir('C:\Python3\Scripts'):
				os.system('pyinstaller ' + _path)
			else:
				print('\033[38;2;202;254;1mPyinstaller not found \033[0m: install with pip3 install pyinstaller\033[0m')
				sys.exit()
		elif sys.platform in ('linux', 'linux2', 'darwin'):
			os.system('chmod +x ' + _path)
		else:
			print('\033[38;2;202;254;1mSystem not recognized\033[0m')
			sys.exit()

	else:
		_help()
		sys.exit()



if __name__ == '__main__':
	main()
